[{"C:\\Users\\Arthur\\Documents\\Workspace\\weatherReact\\weather-app\\src\\index.js":"1","C:\\Users\\Arthur\\Documents\\Workspace\\weatherReact\\weather-app\\src\\App.js":"2"},{"size":432,"mtime":1618233020958,"results":"3","hashOfConfig":"4"},{"size":4754,"mtime":1618910872601,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"xh81ph",{"filePath":"9","messages":"10","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\Arthur\\Documents\\Workspace\\weatherReact\\weather-app\\src\\index.js",[],["12","13"],"C:\\Users\\Arthur\\Documents\\Workspace\\weatherReact\\weather-app\\src\\App.js",["14","15","16","17","18","19","20","21"],"import { useState, useEffect } from 'react';\nimport './App.css';\n\n//Logo import\nimport littleRain from './icon/little-rain.png';\nimport partlyCloud from './icon/partly-cloudy.png';\nimport rain from './icon/rain.png';\nimport snow from './icon/snow.png';\nimport storm from './icon/storm.png';\nimport sun from './icon/sun.png';\nimport wind from './icon/wind.png';\n\n\nfunction App() {\n  // State\n  const [apiData, setApiData] = useState({});\n  const [getState, setGetState] = useState('Paris');\n  const [state, setState] = useState('Paris');\n\n  // API KEY AND URL\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${state}&appid=${apiKey}`;\n  \n  //HTTP STATUS\n  var http = new XMLHttpRequest();\n  http.open('HEAD', apiUrl, false);\n  http.send();\n  const httpStatus = http.status\n\n  // Side effect\n  useEffect(() => {\n    fetch(apiUrl)\n    .then(async (res) => {\n      if(res.ok){     \n        const data = await res.json();\n        return setApiData(data);\n      }\n    })\n  }, [apiUrl, setApiData])\n\n\n \n\n  const inputHandler = (event) => {\n    setGetState(event.target.value)\n  }\n\n  const submitHandler = () => {\n    setState(getState)\n  }\n\n  const kelvinToFarenheit = (k) => {\n    return (k - 273.15).toFixed(1)\n  }\n\n  const milesToKm = (i) => {\n    return (i * 1.609).toFixed(1)\n  }\n\n\n  function IconRendering(){\n    if(apiData.weather[0].id <= \"232\"){\n      return(\n        <img className=\"TempIcon\" src={storm}></img>\n      ) \n    } if((apiData.weather[0].id >= \"500\" && apiData.weather[0].id <= \"531\") || \n         (apiData.weather[0].id >= \"300\" && apiData.weather[0].id <= \"321\")){\n      return(\n        <img className=\"TempIcon\" src={rain}></img>\n      ) \n    } if(apiData.weather[0].id >= \"600\" && apiData.weather[0].id <= \"622\"){\n      return(\n        <img className=\"TempIcon\" src={snow}></img>\n      ) \n    } if(apiData.weather[0].id == \"800\" ){\n      return(\n        <img className=\"TempIcon\" src={sun}></img>\n      ) \n    } if(apiData.weather[0].id >= \"801\" && apiData.weather[0].id <= \"804\"){\n      return(\n        <div>\n        <img className=\"TempIcon\" src={partlyCloud}></img>        \n        </div>\n      ) \n    } else {\n      return(\n        <img className=\"TempIcon\" src={littleRain}></img>\n      )\n    }\n  }\n\n\n    return (\n      <div className=\"App\">\n            {apiData.main ? (\n              <div>\n                <div className=\"SearchGrid\">                  \n                  <div class=\"SGleft\"></div>\n                  <div class=\"SGcenter\">\n                    <div className=\"ErrorText\">\n                    {httpStatus===404 ? <p>There seems to be a problem with the spelling of the city.</p>\n                     : <p>Enter any city name</p>}\n                    </div>\n                      <input\n                        className=\"Search\"\n                        type=\"text\"\n                        id=\"location-name\"\n                        class=\"form-control\"\n                        onChange={inputHandler}\n                        value={getState}\n                      />\n                      <button\n                        className=\"Submit\"\n                        type=\"submit\"\n                        onClick={submitHandler}\n                      ><span className=\"TextBtn\">Go</span></button>\n                  </div>\n                  <div class=\"SGright\"></div>\n                </div>\n\n                <div class=\"AppGrid\">            \n                    <div class=\"AGcenter\">\n                      <div className=\"AppContainer\">\n                        <p className=\"CityName\">{apiData.name}</p>\n                        <IconRendering/>   \n                        <p className=\"Temp\"> {kelvinToFarenheit(apiData.main.temp)}&deg;C</p>\n                        <hr/>\n\n                        <div className=\"TempWindGrid\">\n                          <div classname=\"TWleft\"> \n                            <p className=\"MaxMinText\"> \n                              {kelvinToFarenheit(apiData.main.temp_min)}&deg;C -\n                              {kelvinToFarenheit(apiData.main.temp_max)}&deg;C\n                            </p>\n                          </div>\n                          <div classname=\"TWright\">\n                            <img className=\"WindIcon\" src={wind} /> \n                            <p className=\"WindText\">  {milesToKm(apiData.wind.speed)} Km/h</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  \n\n                  \n                \n\n                \n              </div>\n            ) : (\n              <h1>Loading</h1>       \n            )} \n      </div>\n    );\n            \n};\n\nexport default App;\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":64,"column":9,"nodeType":"28","endLine":64,"endColumn":47},{"ruleId":"26","severity":1,"message":"27","line":69,"column":9,"nodeType":"28","endLine":69,"endColumn":46},{"ruleId":"26","severity":1,"message":"27","line":73,"column":9,"nodeType":"28","endLine":73,"endColumn":46},{"ruleId":"29","severity":1,"message":"30","line":75,"column":32,"nodeType":"31","messageId":"32","endLine":75,"endColumn":34},{"ruleId":"26","severity":1,"message":"27","line":77,"column":9,"nodeType":"28","endLine":77,"endColumn":45},{"ruleId":"26","severity":1,"message":"27","line":82,"column":9,"nodeType":"28","endLine":82,"endColumn":53},{"ruleId":"26","severity":1,"message":"27","line":87,"column":9,"nodeType":"28","endLine":87,"endColumn":52},{"ruleId":"26","severity":1,"message":"27","line":137,"column":29,"nodeType":"28","endLine":137,"endColumn":68},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]